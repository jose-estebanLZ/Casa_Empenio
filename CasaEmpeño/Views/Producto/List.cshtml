
@{
    ViewBag.Title = "Productos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <h3 class="text-center">Productos</h3>
    <div class="row text-right">
        <button class="btn btn-primary m-r-md" onclick="buy()">Comprar</button>
    </div>
    <div class="row m-t m-r-sm m-l-sm">
        <div class="col-sm-12">
            <div class="table-responsive">
                <table cellpadding="1" cellspacing="1" class="table" id="tProducts">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Tipo</th>
                            <th>Estado</th>
                            <th>Fecha Adquisición</th>
                            <th>Hora de devolución</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="tbProducts"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade hmodal-info" id="mDevolucion" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="color-line"></div>
            <div class="modal-header">
                <h4 class="modal-title text-center">Realizar devolución del producto</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" value="" id="returnProductId" />
                <div class="row m-t">
                    <div class="col-md-12">
                        <label>Motivo de devolución</label>
                        <textarea class="form-control" rows="5" id="inpComment"></textarea>
                        <small id="reqComment" class="text-danger"></small>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        <button type="submit" class="btn btn-primary btn-block" onclick="returnProduct()">Procesar devolución</button>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn btn-default btn-block" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade hmodal-info" id="mOffer" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="color-line"></div>
            <div class="modal-header">
                <h4 class="modal-title text-center">Oferta</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" value="" id="offerProductId" />
                <div class="row m-t-sm">
                    <label>Nombre del Comprador</label>
                    <input type="text" class="form-control" id="inpNombre" />
                    <small class="text-danger" id="reqNombre"></small>
                </div>
                <div class="row m-t-sm">
                    <label>Número de teléfono</label>
                    <input type="number" class="form-control" id="inpTelefono" pattern="[0-9]{10}" />
                    <small class="text-danger" id="reqTelefono"></small>
                </div>
                <div class="row m-t-sm">
                    <label>Monto</label>
                    <input type="number" class="form-control" id="inpMonto" />
                    <small class="text-danger" id="reqMonto"></small>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        <button type="submit" class="btn btn-primary btn-block" onclick="offer()">Realizar Oferta</button>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn btn-default btn-block" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/bundles/datatables/css")
    @Styles.Render("~/bundles/toastr/css")
}

@section Scripts{
    @Scripts.Render("~/bundles/datatables/js")
    @Scripts.Render("~/bundles/datatablesBootstrap/js")
    @Scripts.Render("~/bundles/validateInputs/js")
    @Scripts.Render("~/bundles/toastr/js")

    <script type="text/javascript">
    $(document).ready(function(){
        LoadGridData();
    });

    toastr.options = {
        "debug": false,
        "newestOnTop": false,
        "positionClass": "toast-top-center",
        "closeButton": true,
        "debug": false,
        "toastClass": "animated fadeInDown",
        "timeOut": 7000
    };

    function buy() {
       window.location.href = '@Url.Action("Product", "Producto")';
    }

    var table;
    function LoadGridData() {
        tbProducts.innerHTML = '';

        if (table != null) {
            table.clear();
            table.destroy();
        }

        $.ajax({
                type: 'POST',
                cache: false,
                async: true,
                url: '@Url.Action("GetGrid", "Producto")',
                data: {},
            success: function (data) {
                    data.forEach(row => {
                        tbProducts.innerHTML +=
                            `<tr>
                                <td>${row.Nombre}</td>
                                <td>${row.TipoProducto}</td>
                                <td>${row.Estado}</td>
                                <td>${row.FechaIngreso}</td>
                                <td>${row.HoraDevolucion}</td>
                                <td>
                                    ${GetProductAction(row.SePuedeDevolver, row.SePuedeVender, row.UltimaTransaccionId, row.ProductoId)}
                                </td>
                            </tr>`;
                    });

                    table = $('#tProducts').DataTable({
                        "iDisplayLength": 50,
                        "order": [[3, "desc"]],
                    });
                },
                error: function (error) {
                    toastr.error(`Ocurrió un error: ${error.responseText}`);
                    console.error(error);
                }
            });
    }

    function GetProductAction(sePuedeDevolver, sePuedeVender, ultimaTransaccionId, productId) {

        if (sePuedeDevolver) {
            return '<button class="btn btn-default" onclick="showModalReturnProduct('+ productId+')">Devolución</button>';
        }

        if (sePuedeVender) {
            return '<button class="btn btn-primary" onclick="showModalOfter(' + productId + ')">Ofertar</button>';
        }

        if (ultimaTransaccionId == 2) {
            return '<label class="text-info">Devuelto</label>';
        }

        if (ultimaTransaccionId == 3) {
            return '<label class="text-success">Vendido</label>';
        }

        return '';
    }

    function showModalOfter(productId) {
        inpNombre.value = '';
        inpTelefono.value = '';
        inpMonto.value = '';

        offerProductId.value = productId;

        $('#mOffer').modal('show');
    }

    function offer() {

        const arrReqInputs = ['inpNombre', 'inpTelefono', 'inpMonto'];
        const arrReqMsg = ['reqNombre', 'reqTelefono', 'reqMonto'];
        
        if (!ValidateRequiredInputs(arrReqInputs, arrReqMsg)) {
            return;
        }

        if (!isValidPhoneNumber(inpTelefono.value)) {
            toastr.error('El número de teléfono sólo debe contener números y ser de 10 digitos');
            return;
        }


        $.ajax({
            type: 'POST',
            cache: false,
            async: true,
            url: '@Url.Action("AddProductOffer", "Producto")',
            data: {
                ProductoId: offerProductId.value,
                NombreCliente: inpNombre.value,
                Telefono: inpTelefono.value,
                Monto: inpMonto.value
            },
            success: function (result) {
                if (result.isMaxOffer) {
                    toastr.info(`Ofertado más alto: ${inpNombre.value}`);
                }

                toastr.success('Oferta realizada con éxito');

                LoadGridData();
                $('#mOffer').modal('hide');
            },
            error: function (error) {
                toastr.error(`Ocurrió un error: ${error.responseText}`);
                console.error(error);
            }
        });
    }

    function isValidPhoneNumber(phone) {
        return phone.length == 10 && !phone.includes(".");
    }

    function showModalReturnProduct(productId) {
        inpComment.value = '';
        returnProductId.value = productId;

        $('#mDevolucion').modal('show');
    }

    function returnProduct() {        
        const arrReqInputs = ['inpComment'];
        const arrReqMsg = ['reqComment'];

        if (!ValidateRequiredInputs(arrReqInputs, arrReqMsg)) {
            return;
        }

        $.ajax({
                type: 'POST',
                cache: false,
                async: true,
                url: '@Url.Action("AddTransaction", "Producto")',
                data: {
                    productId: returnProductId.value,
                    transactionType: 2,
                    comment: inpComment.value
                },
            success: function (result) {
                    LoadGridData();
                    $('#mDevolucion').modal('hide');
                    toastr.success('Devolución éxitosa');
                },
                error: function (error) {
                    toastr.error(`Ocurrió un error: ${error.responseText}`);
                    console.error(error);
                }
            });
    }
    </script>
}




